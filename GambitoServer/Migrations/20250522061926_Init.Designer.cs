// <auto-generated />
using System;
using GambitoServer.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GambitoServer.Migrations
{
    [DbContext(typeof(GambitoContext))]
    [Migration("20250522061926_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "tipo_hora", new[] { "banco_horas", "hora_extra" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GambitoServer.Db.Defeito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("defeito_pkey");

                    b.HasIndex(new[] { "Nome" }, "defeito_nome_key")
                        .IsUnique()
                        .HasDatabaseName("ix_defeitos_nome");

                    b.ToTable("defeitos", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.Etapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("etapa_pkey");

                    b.ToTable("etapa", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("funcao_pkey");

                    b.HasIndex(new[] { "Nome" }, "funcao_nome_key")
                        .IsUnique()
                        .HasDatabaseName("ix_funcao_nome");

                    b.ToTable("funcao", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int?>("Encarregado")
                        .HasColumnType("integer")
                        .HasColumnName("encarregado");

                    b.Property<int?>("Funcao")
                        .HasColumnType("integer")
                        .HasColumnName("funcao");

                    b.Property<bool>("Invativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("invativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("funcionario_pkey");

                    b.HasIndex("Encarregado")
                        .HasDatabaseName("ix_funcionario_encarregado");

                    b.HasIndex("Funcao")
                        .HasDatabaseName("ix_funcionario_funcao");

                    b.ToTable("funcionario", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("linha_producao_pkey");

                    b.ToTable("linha_producao", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoDia", b =>
                {
                    b.Property<int>("LinhaProducao")
                        .HasColumnType("integer")
                        .HasColumnName("linha_producao");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<bool>("Invativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("invativo");

                    b.HasKey("LinhaProducao", "Data")
                        .HasName("linha_producao_dia_pkey");

                    b.ToTable("linha_producao_dia", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoHora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hora");

                    b.Property<TimeOnly?>("HoraFim")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hora_fim");

                    b.Property<TimeOnly?>("HoraIni")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hora_ini");

                    b.Property<int>("LinhaProducao")
                        .HasColumnType("integer")
                        .HasColumnName("linha_producao");

                    b.Property<bool>("Paralizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("paralizacao");

                    b.Property<int>("Pedido")
                        .HasColumnType("integer")
                        .HasColumnName("pedido");

                    b.Property<int?>("QtdProduzido")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_produzido");

                    b.Property<TipoHora?>("Tipo")
                        .HasColumnType("tipo_hora")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("linha_producao_hora_pkey");

                    b.HasIndex("Pedido")
                        .HasDatabaseName("ix_linha_producao_hora_pedido");

                    b.HasIndex("LinhaProducao", "Data")
                        .HasDatabaseName("ix_linha_producao_hora_linha_producao_data");

                    b.ToTable("linha_producao_hora", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoHoraDefeito", b =>
                {
                    b.Property<int>("LinhaProducaoHora")
                        .HasColumnType("integer")
                        .HasColumnName("linha_producao_hora");

                    b.Property<bool>("Retrabalhado")
                        .HasColumnType("boolean")
                        .HasColumnName("retrabalhado");

                    b.Property<int>("Defeito")
                        .HasColumnType("integer")
                        .HasColumnName("defeito");

                    b.Property<int>("QtdPecas")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_pecas");

                    b.HasKey("LinhaProducaoHora", "Retrabalhado", "Defeito")
                        .HasName("linha_producao_hora_defeito_pkey");

                    b.HasIndex("Defeito")
                        .HasDatabaseName("ix_linha_producao_hora_defeito_defeito");

                    b.ToTable("linha_producao_hora_defeito", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoHoraEtapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<int?>("Etapa")
                        .HasColumnType("integer")
                        .HasColumnName("etapa");

                    b.Property<int>("LinhaProducao")
                        .HasColumnType("integer")
                        .HasColumnName("linha_producao");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer")
                        .HasColumnName("ordem");

                    b.Property<int>("Segundos")
                        .HasColumnType("integer")
                        .HasColumnName("segundos");

                    b.HasKey("Id")
                        .HasName("linha_producao_hora_etapa_pkey");

                    b.HasIndex("Etapa")
                        .HasDatabaseName("ix_linha_producao_hora_etapa_etapa");

                    b.HasIndex("LinhaProducao", "Data")
                        .HasDatabaseName("ix_linha_producao_hora_etapa_linha_producao_data");

                    b.ToTable("linha_producao_hora_etapa", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("Produto")
                        .HasColumnType("integer")
                        .HasColumnName("produto");

                    b.Property<int>("QtdPecas")
                        .HasColumnType("integer")
                        .HasColumnName("qtd_pecas");

                    b.HasKey("Id")
                        .HasName("pedido_pkey");

                    b.HasIndex("Produto")
                        .HasDatabaseName("ix_pedido_produto");

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("TempoPeca")
                        .HasColumnType("integer")
                        .HasColumnName("tempo_peca");

                    b.HasKey("Id")
                        .HasName("produto_pkey");

                    b.HasIndex(new[] { "Nome" }, "produto_nome_key")
                        .IsUnique()
                        .HasDatabaseName("ix_produto_nome");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("LinhaProducaoHoraEtapaFuncionario", b =>
                {
                    b.Property<int>("LinhaProducaoHoraEtapa")
                        .HasColumnType("integer")
                        .HasColumnName("linha_producao_hora_etapa");

                    b.Property<int>("Funcionario")
                        .HasColumnType("integer")
                        .HasColumnName("funcionario");

                    b.HasKey("LinhaProducaoHoraEtapa", "Funcionario")
                        .HasName("linha_producao_hora_etapa_funcionario_pkey");

                    b.HasIndex("Funcionario")
                        .HasDatabaseName("ix_linha_producao_hora_etapa_funcionario_funcionario");

                    b.ToTable("linha_producao_hora_etapa_funcionario", (string)null);
                });

            modelBuilder.Entity("GambitoServer.Db.Funcionario", b =>
                {
                    b.HasOne("GambitoServer.Db.Funcionario", "EncarregadoNavigation")
                        .WithMany("InverseEncarregadoNavigation")
                        .HasForeignKey("Encarregado")
                        .HasConstraintName("funcionario_encarregado_fkey");

                    b.HasOne("GambitoServer.Db.Funcao", "FuncaoNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("Funcao")
                        .HasConstraintName("funcionario_funcao_fkey");

                    b.Navigation("EncarregadoNavigation");

                    b.Navigation("FuncaoNavigation");
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoDia", b =>
                {
                    b.HasOne("GambitoServer.Db.LinhaProducao", "LinhaProducaoNavigation")
                        .WithMany("LinhaProducaoDia")
                        .HasForeignKey("LinhaProducao")
                        .IsRequired()
                        .HasConstraintName("linha_producao_dia_linha_producao_fkey");

                    b.Navigation("LinhaProducaoNavigation");
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoHora", b =>
                {
                    b.HasOne("GambitoServer.Db.Pedido", "PedidoNavigation")
                        .WithMany("LinhaProducaoHoras")
                        .HasForeignKey("Pedido")
                        .IsRequired()
                        .HasConstraintName("linha_producao_hora_pedido_fkey");

                    b.HasOne("GambitoServer.Db.LinhaProducaoDia", "LinhaProducaoDia")
                        .WithMany("LinhaProducaoHoras")
                        .HasForeignKey("LinhaProducao", "Data")
                        .HasConstraintName("linha_producao_hora_linha_producao_data_fkey");

                    b.Navigation("LinhaProducaoDia");

                    b.Navigation("PedidoNavigation");
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoHoraDefeito", b =>
                {
                    b.HasOne("GambitoServer.Db.Defeito", "DefeitoNavigation")
                        .WithMany("LinhaProducaoHoraDefeitos")
                        .HasForeignKey("Defeito")
                        .IsRequired()
                        .HasConstraintName("linha_producao_hora_defeito_defeito_fkey");

                    b.HasOne("GambitoServer.Db.LinhaProducaoHora", "LinhaProducaoHoraNavigation")
                        .WithMany("LinhaProducaoHoraDefeitos")
                        .HasForeignKey("LinhaProducaoHora")
                        .IsRequired()
                        .HasConstraintName("linha_producao_hora_defeito_linha_producao_hora_fkey");

                    b.Navigation("DefeitoNavigation");

                    b.Navigation("LinhaProducaoHoraNavigation");
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoHoraEtapa", b =>
                {
                    b.HasOne("GambitoServer.Db.Etapa", "EtapaNavigation")
                        .WithMany("LinhaProducaoHoraEtapas")
                        .HasForeignKey("Etapa")
                        .HasConstraintName("linha_producao_hora_etapa_etapa_fkey");

                    b.HasOne("GambitoServer.Db.LinhaProducaoDia", "LinhaProducaoDia")
                        .WithMany("LinhaProducaoHoraEtapas")
                        .HasForeignKey("LinhaProducao", "Data")
                        .HasConstraintName("linha_producao_hora_etapa_linha_producao_data_fkey");

                    b.Navigation("EtapaNavigation");

                    b.Navigation("LinhaProducaoDia");
                });

            modelBuilder.Entity("GambitoServer.Db.Pedido", b =>
                {
                    b.HasOne("GambitoServer.Db.Produto", "ProdutoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("Produto")
                        .IsRequired()
                        .HasConstraintName("pedido_produto_fkey");

                    b.Navigation("ProdutoNavigation");
                });

            modelBuilder.Entity("LinhaProducaoHoraEtapaFuncionario", b =>
                {
                    b.HasOne("GambitoServer.Db.Funcionario", null)
                        .WithMany()
                        .HasForeignKey("Funcionario")
                        .IsRequired()
                        .HasConstraintName("linha_producao_hora_etapa_funcionario_funcionario_fkey");

                    b.HasOne("GambitoServer.Db.LinhaProducaoHoraEtapa", null)
                        .WithMany()
                        .HasForeignKey("LinhaProducaoHoraEtapa")
                        .IsRequired()
                        .HasConstraintName("linha_producao_hora_etapa_funcio_linha_producao_hora_etapa_fkey");
                });

            modelBuilder.Entity("GambitoServer.Db.Defeito", b =>
                {
                    b.Navigation("LinhaProducaoHoraDefeitos");
                });

            modelBuilder.Entity("GambitoServer.Db.Etapa", b =>
                {
                    b.Navigation("LinhaProducaoHoraEtapas");
                });

            modelBuilder.Entity("GambitoServer.Db.Funcao", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("GambitoServer.Db.Funcionario", b =>
                {
                    b.Navigation("InverseEncarregadoNavigation");
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducao", b =>
                {
                    b.Navigation("LinhaProducaoDia");
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoDia", b =>
                {
                    b.Navigation("LinhaProducaoHoraEtapas");

                    b.Navigation("LinhaProducaoHoras");
                });

            modelBuilder.Entity("GambitoServer.Db.LinhaProducaoHora", b =>
                {
                    b.Navigation("LinhaProducaoHoraDefeitos");
                });

            modelBuilder.Entity("GambitoServer.Db.Pedido", b =>
                {
                    b.Navigation("LinhaProducaoHoras");
                });

            modelBuilder.Entity("GambitoServer.Db.Produto", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
